name: Helm Publish with Gradle
run-name: Publishing to Helm triggered via ${{ github.event_name }} by ${{ github.actor }}
on:
  workflow_call:
jobs:
  calculate-version:
    runs-on: ubuntu-latest
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: '5.x'
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.15
        with:
          useConfigFile: true
          configFilePath: GitVersion.yml
          additionalArguments: '"/b" "${{ github.ref }}"'
  helm-publish:
    runs-on: ubuntu-latest
    needs: calculate-version
    env:
      SEMVER: ${{ needs.calculate-version.outputs.semVer }}
      HELM_URL: ${{ secrets.HELM_URL }}
      HELM_PATH:  ${{ secrets.HELM_PATH }}
      HELM_USER: ${{ secrets.HELM_USER }}
      HELM_PASSWORD: ${{ secrets.HELM_PASSWORD }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - name: Display GitVersion output
        run: |
          echo "SemVer: $SEMVER"
      - name: Set up JDK17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: gradle
      - id: install
        uses: azure/setup-helm@v3
        with:
          version: '3.11.2'
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        env:
          ORG_GRADLE_PROJECT_version: ${{ env.SEMVER }}
          ORG_GRADLE_PROJECT_HELM_URL: ${{ env.HELM_URL }}
          ORG_GRADLE_PROJECT_HELM_PATH: ${{ env.HELM_PATH }}
          ORG_GRADLE_PROJECT_HELM_USER: ${{ env.HELM_USER }}
          ORG_GRADLE_PROJECT_HELM_PASSWORD: ${{ env.HELM_PASSWORD }}
        with:
          arguments: |
            helmPackage
            --no-daemon
            -Pversion=${{ env.SEMVER }}
      - name: Helm Publish
        id: helmPublish
        shell: bash
        run: |
          echo "$HELM_PASSWORD" | helm registry login $HELM_URL -u $HELM_USER --password-stdin
          helm push build/helm/charts/fsm-akka-helm-umbrella-chart-$SEMVER.tgz oci://$HELM_URL$HELM_PATH
      - name: Check Failure
        if: steps.helmLoginAndPush.outcome != 'success'
        run: exit 1
