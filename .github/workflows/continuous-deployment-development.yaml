name: Continuous Deployment - Development
run-name: ${{ github.actor }}
on:
  workflow_call:
    inputs:
      repo-name:
        required: true
        type: string
      branch-name:
        required: true
        type: string
jobs:
  calculate-version:
    runs-on: ubuntu-latest
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}
    steps:
      - name: Display Branch
        run: |
          echo "Branch: ${{ inputs.branch-name }}"
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch-name }}
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: '5.x'
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.15
        with:
          useConfigFile: true
          configFilePath: GitVersion.yml
          additionalArguments: '"/b" "${{ inputs.branch-name }}"'
      - name: Display GitVersion output
        run: |
          echo "SemVer: $GITVERSION_SEMVER"
  deploy:
    runs-on: ubuntu-latest
    needs: calculate-version
    env:
      SEMVER: ${{ needs.calculate-version.outputs.semVer }}
    steps:
      - name: Deploy Helm Umbrella Chart
        uses: aurelien-baudet/workflow-dispatch@v2
        with:
          workflow: 'helm-publish-with-reuse.yaml'
          repo: 'mehmetsalgar/fsm-akka-helm-umbrella-chart'
          ref: 'development'
          token: ${{ secrets.PERSONAL_TOKEN }}
          wait-for-completion: true
          wait-for-completion-timeout: 5m
          wait-for-completion-interval: 10s
      - name: Prepare Environment
        uses: aurelien-baudet/workflow-dispatch@v2
        with:
          workflow: 'prepare-environment.yaml'
          repo: 'mehmetsalgar/fsm-akka-dev-environment'
          ref: 'bitnami'
          token: ${{ secrets.PERSONAL_TOKEN }}
          wait-for-completion: true
          wait-for-completion-timeout: 5m
          wait-for-completion-interval: 10s
          inputs: '{"source-repo": "${{ inputs.repo-name }}", "version": "${{ env.SEMVER }}"}'
