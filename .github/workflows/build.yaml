name: Java / Gradle CI
run-name: Java / Gradle CI triggered via ${{ github.event_name }} by ${{ github.actor }}
on:
  workflow_call:
    inputs:
      native:
        default: false
        required: false
        type: boolean
      chart-name:
        default: "something"
        required: false
        type: string
jobs:
  calculate-version:
    runs-on: ubuntu-latest
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: '5.x'
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.15
        with:
          useConfigFile: true
          configFilePath: GitVersion.yml
      - name: Display GitVersion ouput
        run: |
          echo "SemVer: $GITVERSION_SEMVER"
  build:
    if: inputs.native == false
    runs-on: ubuntu-latest
    needs: calculate-version
    env:
      SEMVER: ${{ needs.calculate-version.outputs.semVer }}
      DOCKER_HUB_USER: ${{ secrets.DOCKER_HUB_USER }}
      DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
      DOCKER_URL: ${{ secrets.DOCKER_URL }}
      DOCKER_UPLOAD_USER: ${{ secrets.DOCKER_UPLOAD_USER }}
      DOCKER_UPLOAD_PASSWORD: ${{ secrets.DOCKER_UPLOAD_PASSWORD }}
      HELM_URL: ${{ secrets.HELM_URL }}
      HELM_PATH: ${{ secrets.HELM_PATH }}
      HELM_USER: ${{ secrets.HELM_USER }}
      HELM_PASSWORD: ${{ secrets.HELM_PASSWORD }}
      HELM_DOWNLOAD_CLIENT: ${{ secrets.HELM_DOWNLOAD_CLIENT }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Display GitVersion output
        run: |
          echo "SemVer: $SEMVER"
      - name: Set up JDK17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: gradle
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        env:
          ORG_GRADLE_PROJECT_version: ${{ env.SEMVER }}
          ORG_GRADLE_PROJECT_DOCKER_HUB_USER: ${{ env.DOCKER_HUB_USER }}
          ORG_GRADLE_PROJECT_DOCKER_HUB_PASSWORD: ${{ env.DOCKER_HUB_PASSWORD }}
          ORG_GRADLE_PROJECT_DOCKER_UPLOAD_USER: ${{ env.DOCKER_UPLOAD_USER }}
          ORG_GRADLE_PROJECT_DOCKER_URL: ${{ env.DOCKER_URL }}
          ORG_GRADLE_PROJECT_DOCKER_UPLOAD_PASSWORD: ${{ env.DOCKER_UPLOAD_PASSWORD }}
          ORG_GRADLE_PROJECT_HELM_URL: ${{ env.HELM_URL }}
          ORG_GRADLE_PROJECT_HELM_PATH: ${{ env.HELM_PATH }}
          ORG_GRADLE_PROJECT_HELM_USER: ${{ env.HELM_USER }}
          ORG_GRADLE_PROJECT_HELM_PASSWORD: ${{ env.HELM_PASSWORD }}
          ORG_GRADLE_PROJECT_HELM_DOWNLOAD_CLIENT: ${{ env.HELM_DOWNLOAD_CLIENT }}
        with:
          arguments: |
            build 
            -PHELM_DOWNLOAD_CLIENT=true 
            -PHELM_PROCESS=false
            --no-daemon

  build-native:
    if: inputs.native == true
    runs-on: ubuntu-latest
    needs: calculate-version
    env:
      SEMVER: ${{ needs.calculate-version.outputs.semVer }}
      DOCKER_HUB_USER: ${{ secrets.DOCKER_HUB_USER }}
      DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
      DOCKER_URL: ${{ secrets.DOCKER_URL }}
      DOCKER_UPLOAD_USER: ${{ secrets.DOCKER_UPLOAD_USER }}
      DOCKER_UPLOAD_PASSWORD: ${{ secrets.DOCKER_UPLOAD_PASSWORD }}
      HELM_URL: ${{ secrets.HELM_URL }}
      HELM_PATH: ${{ secrets.HELM_PATH }}
      HELM_USER: ${{ secrets.HELM_USER }}
      HELM_PASSWORD: ${{ secrets.HELM_PASSWORD }}
      HELM_DOWNLOAD_CLIENT: ${{ secrets.HELM_DOWNLOAD_CLIENT }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Display GitVersion output
        run: |
          echo "SemVer: $SEMVER"
      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.PERSONAL_TOKEN }}
      - id: install
        uses: azure/setup-helm@v3
        with:
          version: '3.11.2'
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        env:
          ORG_GRADLE_PROJECT_version: ${{ env.SEMVER }}
          ORG_GRADLE_PROJECT_DOCKER_HUB_USER: ${{ env.DOCKER_HUB_USER }}
          ORG_GRADLE_PROJECT_DOCKER_HUB_PASSWORD: ${{ env.DOCKER_HUB_PASSWORD }}
          ORG_GRADLE_PROJECT_DOCKER_URL: ${{ env.DOCKER_URL }}
          ORG_GRADLE_PROJECT_DOCKER_UPLOAD_USER: ${{ env.DOCKER_UPLOAD_USER }}
          ORG_GRADLE_PROJECT_DOCKER_UPLOAD_PASSWORD: ${{ env.DOCKER_UPLOAD_PASSWORD }}
          ORG_GRADLE_PROJECT_HELM_URL: ${{ env.HELM_URL }}
          ORG_GRADLE_PROJECT_HELM_PATH: ${{ env.HELM_PATH }}
          ORG_GRADLE_PROJECT_HELM_USER: ${{ env.HELM_USER }}
          ORG_GRADLE_PROJECT_HELM_PASSWORD: ${{ env.HELM_PASSWORD }}
          ORG_GRADLE_PROJECT_HELM_DOWNLOAD_CLIENT: ${{ env.HELM_DOWNLOAD_CLIENT }}
        with:
          arguments: |
            build
            --no-daemon
      - name: Run Helm Command
        id: helmLoginAndPush
        run: |
          pwd
          ls -al
          helm version
          echo "${{ env.HELM_PASSWORD }}" | helm registry login ${{ env.HELM_URL }} -u ${{ env.HELM_USER }} --password-stdin
